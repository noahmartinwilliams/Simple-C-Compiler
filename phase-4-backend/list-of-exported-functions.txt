void xor(FILE *fd, struct reg_t *a, struct reg_t *b);
void or(FILE *fd, struct reg_t *a, struct reg_t *b);
void and(FILE *fd, struct reg_t *a, struct reg_t *b);
void test_or(FILE *fd, struct reg_t *a, struct reg_t *b);
void assign_dereference(FILE *fd, struct reg_t *a, struct reg_t *b);
void test_and(FILE *fd, struct reg_t *a, struct reg_t *b);
void shift_left(FILE *fd, struct reg_t *a, struct reg_t *b);
void shift_right(FILE *fd, struct reg_t *a, struct reg_t *b);
void int_num(FILE *fd, struct reg_t *a, struct reg_t *b);
void compare_registers(FILE *fd, struct reg_t *a, struct reg_t *b);
void int_num(FILE *fd, struct reg_t *a, struct reg_t *b);
void assign_reg(FILE *fd, struct reg_t *a, struct reg_t *b);
void place_comment(FILE *fd, char *str);
void load_global_string(FILE *fd, char *str);
void test_invert(FILE *fd, struct reg_t *a);
void invert(FILE *fd, struct reg_t *a);
void int_neg(FILE *fd, struct reg_t *a);
void int_inc(FILE *fd, struct reg_t *a);
void int_dec(FILE *fd, struct reg_t *a);
void call_function_pointer(FILE *fd, struct reg_t *a);
void free_register(FILE *fd, struct reg_t *a);
void start_func_ptr_call(FILE *fd, struct reg_t *a);
void call(FILE *fd, struct func_t *f);
void start_call(FILE *fd, struct func_t *f);
void make_function(FILE *fd, struct func_t *f);
void compare_register_to_int(FILE *fd, struct reg_t *a, int i);
void jmp_ge(FILE *fd, char *str);
void place_label(FILE *fd, char *str);
void jmp_gt(FILE *fd, char *str);
void jmp_lt(FILE *fd, char *str);
void jmp_neq(FILE *fd, char *str);
void jmp_eq(FILE *fd, char *str);
void jmp(FILE *fd, char *str);
void jmp_le(FILE *fd, char *str);
void backend_make_global_var(FILE *fd, struct var_t *v);
void read_var(FILE *fd, struct var_t *v);
void load_function_ptr(FILE *fd, struct func_t *f, struct reg_t *r);
void add_argument(FILE *fd, struct reg_t *reg, struct type_t *t );
void return_from_call(FILE *fd);
char* get_reg_name(struct reg_t *reg, size_t size);
struct reg_t* get_ret_register(size_t s, bool is_float);
struct reg_t* get_free_register(FILE *fd, size_t s, int depth, bool is_float);
char* reg_name(struct reg_t *a);
void set_register_size(struct reg_t *r, size_t s);
void get_address(FILE *fd, struct expr_t *var);
void dereference(FILE *fd, struct reg_t *reg, size_t size);
void assign_var(FILE *fd, struct reg_t *src, struct var_t *dest);
char* make_global_string(FILE *fd, char *str);
void assign_constant_int(FILE *fd, long int e);
void assign_constant(FILE *fd, struct expr_t *e);
void assign_constant_float(FILE *fd, struct expr_t *e);
void compare_float_registers(FILE *fd, struct reg_t *a, struct reg_t *b);
char* generate_global_float(FILE *fd, char *num);
void read_float_var(FILE *fd, struct var_t *v);
void add(FILE *fd, struct reg_t *a, struct reg_t *b);
void sub(FILE *fd, struct reg_t *a, struct reg_t *b);
void mul(FILE *fd, struct reg_t *a, struct reg_t *b);
void _div(FILE *fd, struct reg_t *a, struct reg_t *b);
void convert_float_to_int(FILE *fd, struct reg_t *a, struct reg_t *b);
void make_register_variable(struct var_t *v);
void prepare_for_new_function(FILE *fd);
void convert_int_size(FILE *fd, struct reg_t *r, size_t new_size, bool is_signed);
